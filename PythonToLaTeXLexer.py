# Generated from PythonToLaTeX.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,68,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,1,1,
        1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,4,
        9,45,8,9,11,9,12,9,46,1,9,1,9,4,9,51,8,9,11,9,12,9,52,3,9,55,8,9,
        1,10,4,10,58,8,10,11,10,12,10,59,1,11,4,11,63,8,11,11,11,12,11,64,
        1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,1,0,2,2,0,65,90,97,122,3,0,9,10,13,13,32,32,72,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,1,25,1,0,0,0,3,27,1,0,0,0,5,29,1,0,0,0,7,31,1,0,0,0,
        9,33,1,0,0,0,11,35,1,0,0,0,13,37,1,0,0,0,15,39,1,0,0,0,17,41,1,0,
        0,0,19,44,1,0,0,0,21,57,1,0,0,0,23,62,1,0,0,0,25,26,5,43,0,0,26,
        2,1,0,0,0,27,28,5,45,0,0,28,4,1,0,0,0,29,30,5,42,0,0,30,6,1,0,0,
        0,31,32,5,47,0,0,32,8,1,0,0,0,33,34,5,61,0,0,34,10,1,0,0,0,35,36,
        5,46,0,0,36,12,1,0,0,0,37,38,5,59,0,0,38,14,1,0,0,0,39,40,5,40,0,
        0,40,16,1,0,0,0,41,42,5,41,0,0,42,18,1,0,0,0,43,45,2,48,57,0,44,
        43,1,0,0,0,45,46,1,0,0,0,46,44,1,0,0,0,46,47,1,0,0,0,47,54,1,0,0,
        0,48,50,5,46,0,0,49,51,2,48,57,0,50,49,1,0,0,0,51,52,1,0,0,0,52,
        50,1,0,0,0,52,53,1,0,0,0,53,55,1,0,0,0,54,48,1,0,0,0,54,55,1,0,0,
        0,55,20,1,0,0,0,56,58,7,0,0,0,57,56,1,0,0,0,58,59,1,0,0,0,59,57,
        1,0,0,0,59,60,1,0,0,0,60,22,1,0,0,0,61,63,7,1,0,0,62,61,1,0,0,0,
        63,64,1,0,0,0,64,62,1,0,0,0,64,65,1,0,0,0,65,66,1,0,0,0,66,67,6,
        11,0,0,67,24,1,0,0,0,6,0,46,52,54,59,64,1,6,0,0
    ]

class PythonToLaTeXLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    ADD = 1
    SUB = 2
    MUL = 3
    DIV = 4
    EQ = 5
    COMMA = 6
    SEMI = 7
    LPAREN = 8
    RPAREN = 9
    INT = 10
    ID = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'-'", "'*'", "'/'", "'='", "'.'", "';'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "ADD", "SUB", "MUL", "DIV", "EQ", "COMMA", "SEMI", "LPAREN", 
            "RPAREN", "INT", "ID", "WS" ]

    ruleNames = [ "ADD", "SUB", "MUL", "DIV", "EQ", "COMMA", "SEMI", "LPAREN", 
                  "RPAREN", "INT", "ID", "WS" ]

    grammarFileName = "PythonToLaTeX.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


