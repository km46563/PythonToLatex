# Generated from PythonToLaTeX.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,108,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,
        1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,
        13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,
        18,4,18,85,8,18,11,18,12,18,86,1,18,1,18,4,18,91,8,18,11,18,12,18,
        92,3,18,95,8,18,1,19,4,19,98,8,19,11,19,12,19,99,1,20,4,20,103,8,
        20,11,20,12,20,104,1,20,1,20,0,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,1,0,2,2,0,65,90,97,122,3,0,9,10,13,13,32,32,112,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,1,43,1,0,0,0,3,45,1,0,0,0,5,47,1,0,0,0,7,50,1,0,0,0,9,52,
        1,0,0,0,11,54,1,0,0,0,13,56,1,0,0,0,15,58,1,0,0,0,17,60,1,0,0,0,
        19,62,1,0,0,0,21,64,1,0,0,0,23,66,1,0,0,0,25,68,1,0,0,0,27,70,1,
        0,0,0,29,72,1,0,0,0,31,74,1,0,0,0,33,77,1,0,0,0,35,80,1,0,0,0,37,
        84,1,0,0,0,39,97,1,0,0,0,41,102,1,0,0,0,43,44,5,91,0,0,44,2,1,0,
        0,0,45,46,5,93,0,0,46,4,1,0,0,0,47,48,5,47,0,0,48,49,5,47,0,0,49,
        6,1,0,0,0,50,51,5,94,0,0,51,8,1,0,0,0,52,53,5,43,0,0,53,10,1,0,0,
        0,54,55,5,45,0,0,55,12,1,0,0,0,56,57,5,42,0,0,57,14,1,0,0,0,58,59,
        5,47,0,0,59,16,1,0,0,0,60,61,5,61,0,0,61,18,1,0,0,0,62,63,5,46,0,
        0,63,20,1,0,0,0,64,65,5,59,0,0,65,22,1,0,0,0,66,67,5,40,0,0,67,24,
        1,0,0,0,68,69,5,41,0,0,69,26,1,0,0,0,70,71,5,62,0,0,71,28,1,0,0,
        0,72,73,5,60,0,0,73,30,1,0,0,0,74,75,5,62,0,0,75,76,5,61,0,0,76,
        32,1,0,0,0,77,78,5,60,0,0,78,79,5,61,0,0,79,34,1,0,0,0,80,81,5,33,
        0,0,81,82,5,61,0,0,82,36,1,0,0,0,83,85,2,48,57,0,84,83,1,0,0,0,85,
        86,1,0,0,0,86,84,1,0,0,0,86,87,1,0,0,0,87,94,1,0,0,0,88,90,5,46,
        0,0,89,91,2,48,57,0,90,89,1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,
        93,1,0,0,0,93,95,1,0,0,0,94,88,1,0,0,0,94,95,1,0,0,0,95,38,1,0,0,
        0,96,98,7,0,0,0,97,96,1,0,0,0,98,99,1,0,0,0,99,97,1,0,0,0,99,100,
        1,0,0,0,100,40,1,0,0,0,101,103,7,1,0,0,102,101,1,0,0,0,103,104,1,
        0,0,0,104,102,1,0,0,0,104,105,1,0,0,0,105,106,1,0,0,0,106,107,6,
        20,0,0,107,42,1,0,0,0,6,0,86,92,94,99,104,1,6,0,0
    ]

class PythonToLaTeXLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    FRACTIONS = 3
    POWERS = 4
    ADD = 5
    SUB = 6
    MUL = 7
    DIV = 8
    EQ = 9
    COMMA = 10
    SEMI = 11
    LPAREN = 12
    RPAREN = 13
    GREATER = 14
    LESSER = 15
    GREATEREQ = 16
    LESSEREQ = 17
    UNEQ = 18
    INT = 19
    ID = 20
    WS = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'//'", "'^'", "'+'", "'-'", "'*'", "'/'", "'='", 
            "'.'", "';'", "'('", "')'", "'>'", "'<'", "'>='", "'<='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "FRACTIONS", "POWERS", "ADD", "SUB", "MUL", "DIV", "EQ", "COMMA", 
            "SEMI", "LPAREN", "RPAREN", "GREATER", "LESSER", "GREATEREQ", 
            "LESSEREQ", "UNEQ", "INT", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "FRACTIONS", "POWERS", "ADD", "SUB", "MUL", 
                  "DIV", "EQ", "COMMA", "SEMI", "LPAREN", "RPAREN", "GREATER", 
                  "LESSER", "GREATEREQ", "LESSEREQ", "UNEQ", "INT", "ID", 
                  "WS" ]

    grammarFileName = "PythonToLaTeX.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


