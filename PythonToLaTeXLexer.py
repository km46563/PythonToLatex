# Generated from PythonToLaTeX.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,85,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,4,
        1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,4,13,62,8,13,11,13,12,13,63,1,13,1,13,4,13,68,8,13,
        11,13,12,13,69,3,13,72,8,13,1,14,4,14,75,8,14,11,14,12,14,76,1,15,
        4,15,80,8,15,11,15,12,15,81,1,15,1,15,0,0,16,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,1,
        0,2,2,0,65,90,97,122,3,0,9,10,13,13,32,32,89,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,1,33,1,0,0,
        0,3,35,1,0,0,0,5,37,1,0,0,0,7,40,1,0,0,0,9,42,1,0,0,0,11,44,1,0,
        0,0,13,46,1,0,0,0,15,48,1,0,0,0,17,50,1,0,0,0,19,52,1,0,0,0,21,54,
        1,0,0,0,23,56,1,0,0,0,25,58,1,0,0,0,27,61,1,0,0,0,29,74,1,0,0,0,
        31,79,1,0,0,0,33,34,5,91,0,0,34,2,1,0,0,0,35,36,5,93,0,0,36,4,1,
        0,0,0,37,38,5,47,0,0,38,39,5,47,0,0,39,6,1,0,0,0,40,41,5,94,0,0,
        41,8,1,0,0,0,42,43,5,43,0,0,43,10,1,0,0,0,44,45,5,45,0,0,45,12,1,
        0,0,0,46,47,5,42,0,0,47,14,1,0,0,0,48,49,5,47,0,0,49,16,1,0,0,0,
        50,51,5,61,0,0,51,18,1,0,0,0,52,53,5,46,0,0,53,20,1,0,0,0,54,55,
        5,59,0,0,55,22,1,0,0,0,56,57,5,40,0,0,57,24,1,0,0,0,58,59,5,41,0,
        0,59,26,1,0,0,0,60,62,2,48,57,0,61,60,1,0,0,0,62,63,1,0,0,0,63,61,
        1,0,0,0,63,64,1,0,0,0,64,71,1,0,0,0,65,67,5,46,0,0,66,68,2,48,57,
        0,67,66,1,0,0,0,68,69,1,0,0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,72,
        1,0,0,0,71,65,1,0,0,0,71,72,1,0,0,0,72,28,1,0,0,0,73,75,7,0,0,0,
        74,73,1,0,0,0,75,76,1,0,0,0,76,74,1,0,0,0,76,77,1,0,0,0,77,30,1,
        0,0,0,78,80,7,1,0,0,79,78,1,0,0,0,80,81,1,0,0,0,81,79,1,0,0,0,81,
        82,1,0,0,0,82,83,1,0,0,0,83,84,6,15,0,0,84,32,1,0,0,0,6,0,63,69,
        71,76,81,1,6,0,0
    ]

class PythonToLaTeXLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    FRACTIONS = 3
    POWERS = 4
    ADD = 5
    SUB = 6
    MUL = 7
    DIV = 8
    EQ = 9
    COMMA = 10
    SEMI = 11
    LPAREN = 12
    RPAREN = 13
    INT = 14
    ID = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'//'", "'^'", "'+'", "'-'", "'*'", "'/'", "'='", 
            "'.'", "';'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "FRACTIONS", "POWERS", "ADD", "SUB", "MUL", "DIV", "EQ", "COMMA", 
            "SEMI", "LPAREN", "RPAREN", "INT", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "FRACTIONS", "POWERS", "ADD", "SUB", "MUL", 
                  "DIV", "EQ", "COMMA", "SEMI", "LPAREN", "RPAREN", "INT", 
                  "ID", "WS" ]

    grammarFileName = "PythonToLaTeX.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


