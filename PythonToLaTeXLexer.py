# Generated from PythonToLaTeX.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,73,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,
        1,8,1,8,1,9,1,9,1,10,4,10,50,8,10,11,10,12,10,51,1,10,1,10,4,10,
        56,8,10,11,10,12,10,57,3,10,60,8,10,1,11,4,11,63,8,11,11,11,12,11,
        64,1,12,4,12,68,8,12,11,12,12,12,69,1,12,1,12,0,0,13,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,1,0,2,2,0,65,
        90,97,122,3,0,9,10,13,13,32,32,77,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,1,27,1,0,0,0,3,29,1,0,0,0,5,31,1,0,0,0,7,33,1,0,0,0,9,35,1,0,
        0,0,11,38,1,0,0,0,13,40,1,0,0,0,15,42,1,0,0,0,17,44,1,0,0,0,19,46,
        1,0,0,0,21,49,1,0,0,0,23,62,1,0,0,0,25,67,1,0,0,0,27,28,5,43,0,0,
        28,2,1,0,0,0,29,30,5,45,0,0,30,4,1,0,0,0,31,32,5,42,0,0,32,6,1,0,
        0,0,33,34,5,47,0,0,34,8,1,0,0,0,35,36,5,42,0,0,36,37,5,42,0,0,37,
        10,1,0,0,0,38,39,5,61,0,0,39,12,1,0,0,0,40,41,5,46,0,0,41,14,1,0,
        0,0,42,43,5,59,0,0,43,16,1,0,0,0,44,45,5,40,0,0,45,18,1,0,0,0,46,
        47,5,41,0,0,47,20,1,0,0,0,48,50,2,48,57,0,49,48,1,0,0,0,50,51,1,
        0,0,0,51,49,1,0,0,0,51,52,1,0,0,0,52,59,1,0,0,0,53,55,5,46,0,0,54,
        56,2,48,57,0,55,54,1,0,0,0,56,57,1,0,0,0,57,55,1,0,0,0,57,58,1,0,
        0,0,58,60,1,0,0,0,59,53,1,0,0,0,59,60,1,0,0,0,60,22,1,0,0,0,61,63,
        7,0,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,62,1,0,0,0,64,65,1,0,0,0,
        65,24,1,0,0,0,66,68,7,1,0,0,67,66,1,0,0,0,68,69,1,0,0,0,69,67,1,
        0,0,0,69,70,1,0,0,0,70,71,1,0,0,0,71,72,6,12,0,0,72,26,1,0,0,0,6,
        0,51,57,59,64,69,1,6,0,0
    ]

class PythonToLaTeXLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    ADD = 1
    SUB = 2
    MUL = 3
    DIV = 4
    POW = 5
    EQ = 6
    COMMA = 7
    SEMI = 8
    LPAREN = 9
    RPAREN = 10
    INT = 11
    ID = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'-'", "'*'", "'/'", "'**'", "'='", "'.'", "';'", "'('", 
            "')'" ]

    symbolicNames = [ "<INVALID>",
            "ADD", "SUB", "MUL", "DIV", "POW", "EQ", "COMMA", "SEMI", "LPAREN", 
            "RPAREN", "INT", "ID", "WS" ]

    ruleNames = [ "ADD", "SUB", "MUL", "DIV", "POW", "EQ", "COMMA", "SEMI", 
                  "LPAREN", "RPAREN", "INT", "ID", "WS" ]

    grammarFileName = "PythonToLaTeX.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


